import QuestionPage from "@/components/pages/Question";
import data, { Question } from "@/data/data";

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
export async function generateStaticParams() {
  return data.map((question) => ({
    id: question.id.toString(), // `id` –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π
  }));
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∏–∫–∞
async function getQuestion(id: string) {
  const question = data.find((item) => item.id === Number(id));
  return question;
}

export default async function page({
  params,
}: {
  params: Promise<{ id: string }>;
}) {
  //nextjs 15 üò≥
  const { id } = await params;

  const question = (await getQuestion(id)) as Question;

  if (!question) {
    return <div>–í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω</div>;
  }

  // –ü–µ—Ä–µ–¥–∞–µ–º question –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  return <QuestionPage question={question} />;
}
